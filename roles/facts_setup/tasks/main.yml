---
    - name: allinone cluster
      set_fact:
          is_allinone: true
      when: "'tag_dbserver' in group_names and 'tag_webserver' in group_names"

    - name: NOT allinone cluster
      set_fact:
          is_allinone: false
      when: is_allinone is not defined

    - debug:
        msg: "is_allinone ok? ({{ is_allinone }})"

    - name: set db private dns name as service_db_host
      set_fact:
          service_db_host: "{{ hostvars[ groups['tag_dbserver'][0] ]['ec2_private_dns_name'] }}"
      when: not is_allinone and shared_db_dns is not defined

    - name: set SHARED db private dns name as service_db_host
      set_fact:
          service_db_host: "{{ shared_db_dns }}"
      when: not is_allinone and shared_db_dns is defined

    - name: set localhost as service_db_host
      set_fact:
          service_db_host: "localhost"
      when: is_allinone

    - debug:
        msg: "service_db_host is {{ service_db_host }}"

    - name: set webserver_dns for prod
      set_fact:
          webserver_dns: "{{ service_name }}.{{ org_dns_domain }}"
      when:
          - enable_ssl == "true"
          - ec2_tag_cluster == "prod"

    - name: set webserver_dns for non-prod
      set_fact:
          webserver_dns: "{{ ec2_tag_cluster }}.{{ service_name }}.{{ org_dns_domain }}"
      when:
          - enable_ssl == "true"
          - ec2_tag_cluster not in ["prod", "vagrant"]

    - name: set webserver_dns for non-ssl
      set_fact:
          webserver_dns: "{{ ec2_public_dns_name }}"
      when:
          - enable_ssl != "true"
          - ec2_tag_cluster not in ["prod", "vagrant"]

    - name: set webserver_dns for non-ssl vagrant
      set_fact:
          webserver_dns: "catchpy.vm"
      when:
          - ec2_tag_cluster == "vagrant"

    - debug:
        msg: "webserver_dns is {{ webserver_dns }}"

